points(xn[!dn],Yn[!dn], col = 2) 
ttn<-c[which(dn==0)]
FFn<-Fi(1:n,xn,h0,Yn,d)
FF2n<-Fkmi(1:n,xn,h0,Yn,d)
xln<-xn
Yln<-Yn
cln<-cn
dln<-dn
xln[(n+1):(n+length(ttn))]<-xn[which(dn==0)]
Yln[(n+1):(n+length(ttn))]<-100*max(Yn)
cln[(n+1):(n+length(ttn))]<-c[which(dn==0)]
dln[(n+1):(n+length(ttn))]<-0
#weight function
wFn<-((taun-FFn)/(1-FFn))^(as.numeric(dn[1:n]==0)*as.numeric(FFn<taun))
wFn[(n+1):(n+length(ttn))]<-1-wFn[which(!dn)]
wF2n<-((taun-FF2n)/(1-FF2n))^(as.numeric(dn[1:n]==0)*as.numeric(FF2n<taun))
wF2n[(n+1):(n+length(ttn))]<-1-wF2n[which(!dn)]
#rq&crq
lcrqn<-rq(Yln~xln,weights=wFn,taun)
lcrq2n<-rq(Yln~xln,weights=wF2n,taun)
crqn<-crq(Surv(Yn, dn,type='right')~xn ,method="Portnoy",tau=taun) 
gn <- summary(crqn)
gln<-summary(lcrqn)
gl2n<-summary(lcrq2n)
abline(a=3,b=3)
abline(coef(gn[[3]])[,1],col=2)
abline(coef(gln)[,1],col=3)
abline(coef(gl2n)[,1],col=4)
g
gl
F<-function(t,x0,x,h,Y,d){
n=length(x);v=1;tt=0;y=0;
for(j in 1:n){
for(k in 1:n){
s=0;ker=0;
for(m in 1:n){
s=s+15/16*(1-((x0-x[m])/h)^2)^2*as.numeric(abs((x0-x[m])/h)<=1);
}
ker=(15/16*(1-((x0-x[k])/h)^2)^2*as.numeric(abs((x0-x[k])/h)<=1))/s;
tt=tt+as.numeric(Y[k]>=Y[j])*ker;}
s=0;
for(m in 1:n){
s=s+15/16*(1-((x0-x[m])/h)^2)^2*as.numeric(abs((x0-x[m])/h)<=1);
}
ker=(15/16*(1-((x0-x[j])/h)^2)^2*as.numeric(abs((x0-x[j])/h)<=1))/s;
v=v*(1-ker/tt)^(as.numeric(Y[j]<=t)*as.numeric(d[j]==1));
}
1-v}
Fi<-function(i,x1,x2,h,Y,d){
n=length(x);v=1;tt=0;
for(j in 1:n){
for(k in 1:n){
s=0;ker=0;
for(m in 1:n){
s=s+(15/16*(1-((x1[i]-x1[m])/h)^2)^2*as.numeric(abs((x1[i]-x1[m])/h)<=1))*(15/16*(1-((x2[i]-x2[m])/h)^2)^2*as.numeric(abs((x2[i]-x2[m])/h)<=1));
}
ker=(15/16*(1-((x1[i]-x1[k])/h)^2)^2*as.numeric(abs((x1[i]-x1[k])/h)<=1))*(15/16*(1-((x2[i]-x2[k])/h)^2)^2*as.numeric(abs((x2[i]-x2[k])/h)<=1))/s;
tt=tt+as.numeric(Y[k]>=Y[j])*ker;}
s=0;
for(m in 1:n){
s=s+(15/16*(1-((x1[i]-x1[m])/h)^2)^2*as.numeric(abs((x1[i]-x1[m])/h)<=1))*(15/16*(1-((x2[i]-x2[m])/h)^2)^2*as.numeric(abs((x2[i]-x2[m])/h)<=1));
}
ker=(15/16*(1-((x1[i]-x1[j])/h)^2)^2*as.numeric(abs((x1[i]-x1[j])/h)<=1))*(15/16*(1-((x2[i]-x2[j])/h)^2)^2*as.numeric(abs((x2[i]-x2[j])/h)<=1))/s;
v=v*(1-ker/tt)^(as.numeric(Y[j]<=Y[i])*as.numeric(d[j]==1));
}
1-v}
b1<-3
b2<-3
tau<-0.4
n<-200
h0<-0.1
x1<-runif(n,0,1)
x2<-runif(n,0,1)
e<-(rnorm(n)-qnorm(tau))*(0.2+(x1-0.5)^2+(x2-0.5)^2)
T<-b1*x1+b2*x2+e
#surv-time
c<-runif(n,0,12)
Y<-pmin(T,c)
d<-as.numeric(c>=T)
which(d==0)
par(mfrow=c(2,1))
plot(x1,Y)
points(x1[!d],Y[!d], col = 2) #censored points
plot(x2,Y)
points(x2[!d],Y[!d], col = 2) 
FF<-c(1:n)
FF2<-c(1:n)
tt<-c[which(d==0)]
FF<-Fi(1:n,x1,x2,h0,Y,d)
xl1<-x1
xl2<-x2
Yl<-Y
cl<-c
dl<-d
xl1[(n+1):(n+length(tt))]<-x1[which(d==0)]
xl2[(n+1):(n+length(tt))]<-x2[which(d==0)]
Yl[(n+1):(n+length(tt))]<-100*max(Y)
cl[(n+1):(n+length(tt))]<-c[which(d==0)]
dl[(n+1):(n+length(tt))]<-0
wF<-((tau-FF)/(1-FF))^(as.numeric(d[1:n]==0)*as.numeric(FF<tau))
wF[(n+1):(n+length(tt))]<-1-wF[which(!d)]
lcrq<-rq(Yl~xl1+xl2,weights=wF,tau)
crq<-crq(Surv(Y, d,type='right')~x1+x2 ,method="Portnoy",tau=tau) 
lcrq
crq
g <- summary(crq)
gl<-summary(lcrq)
g
gl
q()
q()
require(quantreg)
require(survival)
Fi5<-function(i,x1,x2,x3,x4,x5,h,Y,d){
n=length(x1);v=1;tt=0;
for(j in 1:n){
for(k in 1:n){
s=0;ker=0;
for(m in 1:n){
s=s+(15/16*(1-((x1[i]-x1[m])/h)^2)^2*as.numeric(abs((x1[i]-x1[m])/h)<=1))*(15/16*(1-((x2[i]-x2[m])/h)^2)^2*as.numeric(abs((x2[i]-x2[m])/h)<=1))*(15/16*(1-((x3[i]-x3[m])/h)^2)^2*as.numeric(abs((x3[i]-x3[m])/h)<=1))*(15/16*(1-((x4[i]-x4[m])/h)^2)^2*as.numeric(abs((x4[i]-x4[m])/h)<=1))*(15/16*(1-((x5[i]-x5[m])/h)^2)^2*as.numeric(abs((x5[i]-x5[m])/h)<=1));
}
ker=(15/16*(1-((x1[i]-x1[k])/h)^2)^2*as.numeric(abs((x1[i]-x1[k])/h)<=1))*(15/16*(1-((x2[i]-x2[k])/h)^2)^2*as.numeric(abs((x2[i]-x2[k])/h)<=1))*(15/16*(1-((x3[i]-x3[k])/h)^2)^2*as.numeric(abs((x3[i]-x3[k])/h)<=1))*(15/16*(1-((x4[i]-x4[k])/h)^2)^2*as.numeric(abs((x4[i]-x4[k])/h)<=1))*(15/16*(1-((x5[i]-x5[k])/h)^2)^2*as.numeric(abs((x5[i]-x5[k])/h)<=1))/s;
tt=tt+as.numeric(Y[k]>=Y[j])*ker;}
s=0;
for(m in 1:n){
s=s+(15/16*(1-((x1[i]-x1[m])/h)^2)^2*as.numeric(abs((x1[i]-x1[m])/h)<=1))*(15/16*(1-((x2[i]-x2[m])/h)^2)^2*as.numeric(abs((x2[i]-x2[m])/h)<=1))*(15/16*(1-((x3[i]-x3[m])/h)^2)^2*as.numeric(abs((x3[i]-x3[m])/h)<=1))*(15/16*(1-((x4[i]-x4[m])/h)^2)^2*as.numeric(abs((x4[i]-x4[m])/h)<=1))*(15/16*(1-((x5[i]-x5[m])/h)^2)^2*as.numeric(abs((x5[i]-x5[m])/h)<=1));
}
ker=(15/16*(1-((x1[i]-x1[j])/h)^2)^2*as.numeric(abs((x1[i]-x1[j])/h)<=1))*(15/16*(1-((x2[i]-x2[j])/h)^2)^2*as.numeric(abs((x2[i]-x2[j])/h)<=1))*(15/16*(1-((x3[i]-x3[j])/h)^2)^2*as.numeric(abs((x3[i]-x3[j])/h)<=1))*(15/16*(1-((x4[i]-x4[j])/h)^2)^2*as.numeric(abs((x4[i]-x4[j])/h)<=1))*(15/16*(1-((x5[i]-x5[j])/h)^2)^2*as.numeric(abs((x5[i]-x5[j])/h)<=1))/s;
v=v*(1-ker/tt)^(as.numeric(Y[j]<=Y[i])*as.numeric(d[j]==1));
}
1-v}
b1<-3
b2<-3
b3<-3
b4<-3
b5<-3
tau<-0.4
n<-200
h0<-0.1
x1<-runif(n,0,1)
x2<-runif(n,0,1)
x3<-runif(n,0,1)
x4<-runif(n,0,1)
x5<-runif(n,0,1)
e<-(rnorm(n)-qnorm(tau))*(0.2+(x1-0.5)^2+(x2-0.5)^2)
T<-b1*x1+b2*x2+b3*x3+b4*x4+b5*x5+e
c<-runif(n,0,12)
Y<-pmin(T,c)
d<-as.numeric(c>=T
)
which(d==0)
length(which(d==0))
c<-runif(n,0,15)
Y<-pmin(T,c)
d<-as.numeric(c>=T)
length(which(d==0))
b1<-3
b2<-3
tau<-0.4
n<-200
h0<-0.1
x1<-runif(n,0,1)
x2<-runif(n,0,1)
e<-(rnorm(n)-qnorm(tau))*(0.2+(x1-0.5)^2+(x2-0.5)^2)
T<-b1*x1+b2*x2+e
#surv-time
c<-runif(n,0,12)
Y<-pmin(T,c)
d<-as.numeric(c>=T)
length(which(d==0))
c<-runif(n,0,40)
Y<-pmin(T,c)
d<-as.numeric(c>=T)
length(which(d==0))
c<-runif(n,0,30)
Y<-pmin(T,c)
d<-as.numeric(c>=T)
length(which(d==0))
b1<-3
b2<-3
b3<-3
b4<-3
b5<-3
tau<-0.4
n<-200
h0<-0.1
x1<-runif(n,0,1)
x2<-runif(n,0,1)
x3<-runif(n,0,1)
x4<-runif(n,0,1)
x5<-runif(n,0,1)
e<-(rnorm(n)-qnorm(tau))*(0.2+(x1-0.5)^2+(x2-0.5)^2)
T<-b1*x1+b2*x2+b3*x3+b4*x4+b5*x5+e
c<-runif(n,0,30)
Y<-pmin(T,c)
d<-as.numeric(c>=T)
length(which(d==0))
plot(x2,Y)
points(x2[!d],Y[!d], col = 2) 
FF<-c(1:n)
tt<-c[which(d==0)]
FF<-Fi5(1:n,x1,x2,x3,x4,x5,h0,Y,d)
xl1<-x1
xl2<-x2
xl3<-x3
xl4<-x4
xl5<-x5
Yl<-Y
cl<-c
dl<-d
xl1[(n+1):(n+length(tt))]<-x1[which(d==0)]
xl2[(n+1):(n+length(tt))]<-x2[which(d==0)]
xl3[(n+1):(n+length(tt))]<-x3[which(d==0)]
xl4[(n+1):(n+length(tt))]<-x4[which(d==0)]
xl5[(n+1):(n+length(tt))]<-x5[which(d==0)]
Yl[(n+1):(n+length(tt))]<-100*max(Y)
cl[(n+1):(n+length(tt))]<-c[which(d==0)]
dl[(n+1):(n+length(tt))]<-0
#weight function
wF<-((tau-FF)/(1-FF))^(as.numeric(d[1:n]==0)*as.numeric(FF<tau))
wF[(n+1):(n+length(tt))]<-1-wF[which(!d)]
lcrq<-rq(Yl~xl1+xl2+xl3+xl4+xl5,weights=wF,tau)
crq<-crq(Surv(Y, d,type='right')~x1+x2+x3+x4+x5 ,method="Portnoy",tau=tau) 
g <- summary(crq)
gl<-summary(lcrq)
g
gl
b1<-3
b2<-3
b3<-3
b4<-3
b5<-3
tau<-0.4
n<-200
h0<-0.1
x1<-runif(n,0,1)
x2<-runif(n,0,1)
x3<-runif(n,0,1)
x4<-runif(n,0,1)
x5<-runif(n,0,1)
e<-(rnorm(n)-qnorm(tau))*(0.2+(x1-0.5)^2+(x2-0.5)^2+(x3-0.5)^2+(x4-0.5)^2+(x5-0.5)^2)
T<-b1*x1+b2*x2+b3*x3+b4*x4+b5*x5+e
c<-runif(n,0,30)
Y<-pmin(T,c)
d<-as.numeric(c>=T)
length(which(d==0))
FF<-c(1:n)
tt<-c[which(d==0)]
FF<-Fi5(1:n,x1,x2,x3,x4,x5,h0,Y,d)
xl1<-x1
xl2<-x2
xl3<-x3
xl4<-x4
xl5<-x5
Yl<-Y
cl<-c
dl<-d
xl1[(n+1):(n+length(tt))]<-x1[which(d==0)]
xl2[(n+1):(n+length(tt))]<-x2[which(d==0)]
xl3[(n+1):(n+length(tt))]<-x3[which(d==0)]
xl4[(n+1):(n+length(tt))]<-x4[which(d==0)]
xl5[(n+1):(n+length(tt))]<-x5[which(d==0)]
Yl[(n+1):(n+length(tt))]<-100*max(Y)
cl[(n+1):(n+length(tt))]<-c[which(d==0)]
dl[(n+1):(n+length(tt))]<-0
wF<-((tau-FF)/(1-FF))^(as.numeric(d[1:n]==0)*as.numeric(FF<tau))
wF[(n+1):(n+length(tt))]<-1-wF[which(!d)]
#rq&crq
lcrq<-rq(Yl~xl1+xl2+xl3+xl4+xl5,weights=wF,tau)
crq<-crq(Surv(Y, d,type='right')~x1+x2+x3+x4+x5 ,method="Portnoy",tau=tau) 
g <- summary(crq)
gl<-summary(lcrq)
g
gl
q()
g
gl
gl
gl
q()
install.packages("survival")
library(survival)
train<-read.csv("C:/Loan_credit_total1_train10000.csv")
hold<-read.csv("C:/Loan_credit_total1_hold4286.csv")
x<-cbind(1,hold)
cox<-coxph(Surv(surv_time,defaultcensor_id)~
               ProsperRating__numeric+
EmploymentStatusDuration_num+
CreditScoreRangeLower_num+
OpenRevolvingAccounts_num+
OpenRevolvingMonthlyPayment_num+
InquiriesLast6Months_num+
TotalInquiries_num+
CurrentDelinquencies_num+
TradesOpenedLast6Months_num+
LoanOriginalAmount_num+
MonthlyLoanPayment_num+
Investors_num+
clu_ES+
IR,data=train)
cox
library(survival)
train<-read.csv("C:/Loan_credit_total1_train10000.csv")
hold<-read.csv("C:/Loan_credit_total1_hold4286.csv")
x<-cbind(1,hold)
cox<-coxph(Surv(surv_time,defaultcensor_id)~
               ProsperRating__numeric+
EmploymentStatusDuration_num+
CreditScoreRangeLower_num+
OpenRevolvingAccounts_num+
OpenRevolvingMonthlyPayment_num+
InquiriesLast6Months_num+
TotalInquiries_num+
CurrentDelinquencies_num+
TradesOpenedLast6Months_num+
LoanOriginalAmount_num+
MonthlyLoanPayment_num+
Investors_num+
clu_ES+
IR,data=train)
cox
library(survival)
train<-read.csv("C:/Loan_credit_total1_train10000.csv")
hold<-read.csv("C:/Loan_credit_total1_hold4286.csv")
x<-cbind(1,hold)
cox<-coxph(Surv(surv_time,default_id)~
               ProsperRating__numeric+
EmploymentStatusDuration_num+
CreditScoreRangeLower_num+
OpenRevolvingAccounts_num+
OpenRevolvingMonthlyPayment_num+
InquiriesLast6Months_num+
TotalInquiries_num+
CurrentDelinquencies_num+
TradesOpenedLast6Months_num+
LoanOriginalAmount_num+
MonthlyLoanPayment_num+
Investors_num+
clu_ES+
IR,data=train)
cox
?coxph
pre_hold<-predict(cox,newdata=x)
write.csv(pre_hold,'C:/pre_hold.csv')
pre_hold<-predict(cox,newdata=x)
write.csv(pre_hold,'C:/pre_hold.csv')
?predict.coxph
pre_hold<-predict.coxph(cox,newdata=x)
pre_hold<-predict(cox,newdata=x,type="expected")
library(survival)
train<-read.csv("C:/Loan_credit_total1_train10000.csv")
hold<-read.csv("C:/Loan_credit_total1_hold4286.csv")
x<-cbind(1,hold)
cox<-coxph(Surv(surv_time,default_id)~
               ProsperRating__numeric+
EmploymentStatusDuration_num+
CreditScoreRangeLower_num+
OpenRevolvingAccounts_num+
OpenRevolvingMonthlyPayment_num+
InquiriesLast6Months_num+
TotalInquiries_num+
CurrentDelinquencies_num+
TradesOpenedLast6Months_num+
LoanOriginalAmount_num+
MonthlyLoanPayment_num+
Investors_num+
clu_ES+
IR,data=train)
pre_hold<-predict(cox,newdata=x,type="expected")
cox
train<-read.csv("C:/survana/Loan_credit_total1_train10000.csv")
hold<-read.csv("C:/survana/Loan_credit_total1_hold4286.csv")
x<-cbind(1,hold)
cox<-coxph(Surv(surv_time,default_id)~
               ProsperRating__numeric+
EmploymentStatusDuration_num+
CreditScoreRangeLower_num+
OpenRevolvingAccounts_num+
OpenRevolvingMonthlyPayment_num+
InquiriesLast6Months_num+
TotalInquiries_num+
CurrentDelinquencies_num+
TradesOpenedLast6Months_num+
LoanOriginalAmount_num+
MonthlyLoanPayment_num+
Investors_num+
clu_ES+
IR,data=train)
pre_hold<-predict(cox,newdata=x,type="expected")
write.csv(pre_hold,'C:/pre_hold.csv')
pre_hold<-predict(cox,newdata=x,type="lp")
write.csv(pre_hold,'C:/pre_hold.csv')
pre_hold<-predict(cox,newdata=x,type="risk")
write.csv(pre_hold,'C:/pre_hold.csv')
data(package = "survival")
data(lung)
rmse <- sqrt(mean((x$default_id - predict(cox,newdata=x,type="expected"))^2))
rmse
q()
library(survival)
setwd("C:/survana")
train<-read.csv("C:/survana/Loan_credit_total1_train1000cle.csv")
hold<-read.csv("C:/survana/Loan_credit_total1_hold400cln_c.csv")
x<-cbind(1,hold)
cox<-coxph(Surv(surv_time,default_id)~
               ProsperRating__numeric+
EmploymentStatusDuration_num+
CreditScoreRangeLower_num+
OpenRevolvingAccounts_num+
OpenRevolvingMonthlyPayment_num+
InquiriesLast6Months_num+
TotalInquiries_num+
CurrentDelinquencies_num+
TradesOpenedLast6Months_num+
LoanOriginalAmount_num+
MonthlyLoanPayment_num+
Investors_num+
clu_ES+
IR,data=train)
pre1<-predict(cox,newdata=x,type="lp")
pre2<-predict(cox,newdata=x,type="expected")
pre3<-predict(cox,newdata=x,type="risk")
pre4<-predict(cox,newdata=x,type="terms")
cool<-data.frame(cbind(pre1,pre2,pre3,pre4))
hold<-read.csv("C:/survana/Loan_credit_total1_hold400cln_c.csv")
x<-cbind(1,hold)
pre1<-predict(cox,newdata=x,type="lp")
pre2<-predict(cox,newdata=x,type="expected")
pre3<-predict(cox,newdata=x,type="risk")
pre4<-predict(cox,newdata=x,type="terms")
hold<-read.csv("C:/survana/Loan_credit_total1_hold400cln_c.csv")
x<-cbind(1,hold)
pre1<-predict(cox,newdata=x,type="lp")
pre2<-predict(cox,newdata=x,type="expected")
pre3<-predict(cox,newdata=x,type="risk")
pre4<-predict(cox,newdata=x,type="terms")
cool<-data.frame(cbind(pre1,pre2,pre3,pre4))
write.csv(cool,"pree.csv")
pre1<-predict(cox,newdata=x,type="lp")
pre2<-predict(cox,newdata=x,type="expected")
pre3<-predict(cox,newdata=x,type="risk")
pre4<-predict(cox,newdata=x,type="terms")
cool<-data.frame(cbind(pre1,pre2,pre3,pre4))
write.csv(cool,"pr.csv")
base<-read.csv("C:/survana/baseline.csv")
basex<-cbind(1,base)
pre_baseline<-predict(cox,newdata=x,type="expected")
pre_baseline<-predict(cox,newdata=basex,type="expected")
base<-read.csv("C:/survana/baseline.csv")
basex<-cbind(1,base)
pre_baseline<-predict(cox,newdata=basex,type="expected")
pre_baseline
base<-read.csv("C:/survana/baseline.csv")
basex<-cbind(1,base)
pre_baseline<-predict(cox,newdata=basex,type="expected")
pre_baseline
1/pre_baseline
library(survival)
library(SparseM)
library(quantreg)
setwd("C:/Users/Admin/Desktop/loan/quantlife")
dataset<-read.csv('Loan_credit_total1_train1000cle.csv')
dataset0<-subset(dataset,surv_time!=0)
setwd("D:/sas/CHEN/quantlife")
dataset<-read.csv('Loan_credit_total1_train1000cle.csv')
dataset0<-subset(dataset,surv_time!=0)
a<-crq(Surv(log(surv_time),defaultcensor_id)~CreditScoreRangeLower_num+
         InquiriesLast6Months_num+
         ProsperRating__numeric+
         clu_ES+
         IR+
         MonthlyLoanPayment_num+
         LoanOriginalAmount_num+
         CurrentDelinquencies_num+
         TradesOpenedLast6Months_num+
         OpenRevolvingAccounts_num+
         TotalInquiries_num+
         StatedMonthlyIncome_num+
         Investors_num+
         OpenRevolvingMonthlyPayment_num+
         EmploymentStatusDuration_num+
         BankcardUtilization_num,
       data=dataset0, method="Por", taus=c(1:9/10)
)
sa<-summary(a,tau=c(1:9/10), R=500)  
wl<-list()
for (i in 1:length(sa)){
  value=sa[[i]]$coef
  tau=sa[[i]]$tau
  c=rbind(value,tau)
  wl[[i]]<-list(c,i)
}
para<-data.frame(wl)
write.csv(para,'para.csv')
plot(sa)
hold<-read.csv('Loan_credit_total1_hold400cln_c.csv')
hold<-cbind(1,hold)
taus <- a$sol[1,]
hold<-data.matrix(hold)
#predict default time of hold-data
pred_t <- exp(t(hold %*% a$sol[c(2:20),]))
write.csv(pred_t,'pred_t.csv')
x<-matrix(rep(0),nrow=400,ncol=3)
for (j in 1:3){
    TIME<-6*j
  for (i in 1:400){pred_spl<- smooth.spline(data.frame(pred_t[,i], taus))
                   ypred<-predict(pred_spl, TIME)$y
                   x[i,j]<-ypred
  }}
x<-data.frame(x)
write.csv(x,'survprob.csv')
q()
